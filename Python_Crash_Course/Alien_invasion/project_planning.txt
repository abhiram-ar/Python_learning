In Alien Invasion, the player controls a rocket ship that appears 
at the bottom center of the screen. 
The player can move the ship right and left using the arrow keys 
and shoot bullets using the spacebar. 

When the game begins, a fleet of aliens fills the sky 
and moves across and down the screen. The player shoots and 
destroys the aliens. If the player shoots all the aliens, a new fleet 
appears that moves faster than the previous fleet. If any alien hits 
the player’s ship or reaches the bottom of the screen, the player 
loses a ship. If the player loses three ships, the game ends.



learning :
    When you’re working with a rect object, you can use the x and ycoordi
    nates of the top, bottom, left, and right edges of the rectangle, as well as the 
    center, to place the object. You can set any of these values to establish the 
    current position of the rect. When you’re centering a game element, work 
    with the center, centerx, or centery attributes of a rect. When you’re working 
    at an edge of the screen, work with the top, bottom, left, or right attributes.  
    There are also attributes that combine these properties, such as midbottom, 
    midtop, midleft, and midright. When you’re adjusting the horizontal or verti
     cal placement of the rect, you can just use the x and y attributes, which are 
    the x and ycoordinates of its topleft corner. These attributes spare you 
    from having to do calculations that game developers formerly had to do 
    manually, and you’ll use them often.


    In Pygame, the origin (0, 0) is at the top-left corner of the screen, and coordinates 
    increase as you go down and to the right. On a 1200 by 800 screen, the origin is 
    at the top-left corner, and the bottom-right corner has the coordinates (1200, 800). 
    These coordinates refer to the game window, not the physical screen


    A helper method does work inside a class but isn’t meant to be called through an instance. 
    In Python, a single leading underscore indicates a helper method


    Write the code that works and then as the code grows more complex refactor/restructure them,
    this is most of the developmenet process 
